{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAdd","useState","setMovie","query","setQuery","spinner","showSpinner","hasMovie","takeMovie","noMovie","missMovie","lowQuery","toLowerCase","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","movieData","defaultPoster","defaultImdbUrl","imdbID","Poster","Title","Plot","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","find","movieFromList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d47b7e1.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [spinner, showSpinner] = useState(false);\n  const [hasMovie, takeMovie] = useState(false);\n  const [noMovie, missMovie] = useState(false);\n  const lowQuery = query.toLowerCase();\n\n  const searchMovie = (event: React.ChangeEvent<HTMLFormElement>) => {\n    showSpinner(true);\n    event.preventDefault();\n\n    getMovie(lowQuery).then((movieData) => {\n      if ('Error' in movieData) {\n        missMovie(true);\n        setQuery('');\n\n        return;\n      }\n\n      let defaultPoster = 'https://via.placeholder.com'\n        + '/360x270.png?text=no%20preview';\n      const defaultImdbUrl = 'https://www.imdb.com/title/'\n        + `${movieData.imdbID}/?ref_=ttfc_fc_tt`;\n\n      if (movieData.Poster !== 'N/A') {\n        defaultPoster = movieData.Poster;\n      }\n\n      setMovie({\n        title: movieData.Title,\n        description: movieData.Plot,\n        imgUrl: defaultPoster,\n        imdbUrl: defaultImdbUrl,\n        imdbId: movieData.imdbID,\n      });\n\n      takeMovie(true);\n    }).finally(() => showSpinner(false));\n  };\n\n  const addToList = () => {\n    if (movie) {\n      onAdd(movie);\n    }\n\n    setQuery('');\n    takeMovie(false);\n    missMovie(false);\n    setMovie(null);\n    showSpinner(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={searchMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            {' '}\n            {movie?.title}\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n\n          {noMovie && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={\n                classNames('button', 'is-light', { 'is-loading': spinner })\n              }\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {(movie && hasMovie) && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=d049b4a';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const onAdd = (movie: Movie) => {\n    const hasMovie = movies\n      .find(movieFromList => movieFromList.imdbId\n        === movie.imdbId);\n\n    if (hasMovie) {\n      return;\n    }\n\n    setMovies([movie, ...movies]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}